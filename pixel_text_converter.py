"""Convert a sentence into circloO objects"""

import pixel_builder as pb
characters = {

    '0':    [[1, 1, 1],
             [1, 0, 1],
             [1, 0, 1],
             [1, 0, 1],
             [1, 1, 1]],

    '1':    [[1, 1, 0],
             [0, 1, 0],
             [0, 1, 0],
             [0, 1, 0],
             [1, 1, 1]],

    '2':    [[1, 1, 1],
             [0, 0, 1],
             [1, 1, 1],
             [1, 0, 0],
             [1, 1, 1]],

    '3':    [[1, 1, 1],
             [0, 0, 1],
             [1, 1, 1],
             [0, 0, 1],
             [1, 1, 1]],

    '4':    [[1, 0, 1],
             [1, 0, 1],
             [1, 1, 1],
             [0, 0, 1],
             [0, 0, 1]],

    '5':    [[1, 1, 1],
             [1, 0, 0],
             [1, 1, 1],
             [0, 0, 1],
             [1, 1, 1]],

    '6':    [[1, 1, 1],
             [1, 0, 0],
             [1, 1, 1],
             [1, 0, 1],
             [1, 1, 1]],

    '7':    [[1, 1, 1],
             [0, 0, 1],
             [0, 0, 1],
             [0, 0, 1],
             [0, 0, 1]],

    '8':    [[1, 1, 1],
             [1, 0, 1],
             [1, 1, 1],
             [1, 0, 1],
             [1, 1, 1]],

    '9':    [[1, 1, 1],
             [1, 0, 1],
             [1, 1, 1],
             [0, 0, 1],
             [1, 1, 1]],

    'A':    [[1, 1, 1],
             [1, 0, 1],
             [1, 1, 1],
             [1, 0, 1],
             [1, 0, 1]],

    'B':    [[1, 1, 1],
             [1, 0, 1],
             [1, 1, 0],
             [1, 0, 1],
             [1, 1, 1]],

    'C':    [[1, 1, 1],
             [1, 0, 0],
             [1, 0, 0],
             [1, 0, 0],
             [1, 1, 1]],

    'D':    [[1, 1, 0],
             [1, 0, 1],
             [1, 0, 1],
             [1, 0, 1],
             [1, 1, 0]],

    'E':    [[1, 1, 1],
             [1, 0, 0],
             [1, 1, 1],
             [1, 0, 0],
             [1, 1, 1]],

    'F':    [[1, 1, 1],
             [1, 0, 0],
             [1, 1, 1],
             [1, 0, 0],
             [1, 0, 0]],

    'G':    [[1, 1, 1],
             [1, 0, 0],
             [1, 0, 1],
             [1, 0, 1],
             [1, 1, 1]],

    'H':    [[1, 0, 1],
             [1, 0, 1],
             [1, 1, 1],
             [1, 0, 1],
             [1, 0, 1]],

    'I':    [[1, 1, 1],
             [0, 1, 0],
             [0, 1, 0],
             [0, 1, 0],
             [1, 1, 1]],

    'J':    [[1, 1, 1],
             [0, 1, 0],
             [0, 1, 0],
             [0, 1, 0],
             [1, 1, 0]],

    'K':    [[1, 0, 1],
             [1, 0, 1],
             [1, 1, 0],
             [1, 0, 1],
             [1, 0, 1]],

    'L':    [[1, 0, 0],
             [1, 0, 0],
             [1, 0, 0],
             [1, 0, 0],
             [1, 1, 1]],

    'M':    [[1, 0, 1],
             [1, 1, 1],
             [1, 1, 1],
             [1, 0, 1],
             [1, 0, 1]],

    'N':    [[1, 1, 1],
             [1, 0, 1],
             [1, 0, 1],
             [1, 0, 1],
             [1, 0, 1]],

    'O':    [[1, 1, 1],
             [1, 0, 1],
             [1, 0, 1],
             [1, 0, 1],
             [1, 1, 1]],

    'P':    [[1, 1, 1],
             [1, 0, 1],
             [1, 1, 1],
             [1, 0, 0],
             [1, 0, 0]],

    'Q':    [[1, 1, 1],
             [1, 0, 1],
             [1, 0, 1],
             [1, 0, 1],
             [1, 1, 1],
             [0, 0, 1]],

    'R':    [[1, 1, 1],
             [1, 0, 1],
             [1, 1, 0],
             [1, 0, 1],
             [1, 0, 1]],

    'S':    [[1, 1, 1],
             [1, 0, 0],
             [1, 1, 1],
             [0, 0, 1],
             [1, 1, 1]],

    'T':    [[1, 1, 1],
             [0, 1, 0],
             [0, 1, 0],
             [0, 1, 0],
             [0, 1, 0]],

    'U':    [[1, 0, 1],
             [1, 0, 1],
             [1, 0, 1],
             [1, 0, 1],
             [1, 1, 1]],

    'V':    [[1, 0, 1],
             [1, 0, 1],
             [1, 0, 1],
             [1, 0, 1],
             [0, 1, 0]],

    'W':    [[1, 0, 1],
             [1, 0, 1],
             [1, 0, 1],
             [1, 1, 1],
             [1, 0, 1]],

    'X':    [[1, 0, 1],
             [1, 0, 1],
             [0, 1, 0],
             [1, 0, 1],
             [1, 0, 1]],

    'Y':    [[1, 0, 1],
             [1, 0, 1],
             [1, 1, 1],
             [0, 1, 0],
             [0, 1, 0]],

    'Z':    [[1, 1, 1],
             [0, 0, 1],
             [0, 1, 0],
             [1, 0, 0],
             [1, 1, 1]],

    ' ':    [[0, 0, 0],
             [0, 0, 0],
             [0, 0, 0],
             [0, 0, 0],
             [0, 0, 0]],

    '-':    [[0, 0, 0],
             [0, 0, 0],
             [1, 1, 1],
             [0, 0, 0],
             [0, 0, 0]],

    '.':    [[0, 0],
             [0, 0],
             [0, 0],
             [0, 0],
             [1, 0]],

    ',':    [[0, 0],
             [0, 0],
             [0, 0],
             [0, 0],
             [1, 0],
             [1, 0]],

    '?':    [[1, 1, 1],
             [0, 0, 1],
             [0, 1, 1],
             [0, 0, 0],
             [0, 1, 0]],

    '!':    [[1, 0],
             [1, 0],
             [1, 0],
             [0, 0],
             [1, 0]],

    '/':    [[0, 0, 1],
             [0, 1, 0],
             [0, 1, 0],
             [0, 1, 0],
             [1, 0, 0]],

    '&':    [[0, 1, 1, 0],
             [1, 0, 0, 0],
             [0, 1, 1, 0],
             [1, 0, 0, 1],
             [0, 1, 1, 1]],

    '+':    [[0, 0, 0],
             [0, 1, 0],
             [1, 1, 1],
             [0, 1, 0],
             [0, 0, 0]],

    '<':    [[0, 0, 1],
             [0, 1, 0],
             [1, 0, 0],
             [0, 1, 0],
             [0, 0, 1]],

    '>':    [[1, 0, 0],
             [0, 1, 0],
             [0, 0, 1],
             [0, 1, 0],
             [1, 0, 0]],

    'missing':  [[1, 1, 1],
                 [1, 1, 1],
                 [1, 1, 1],
                 [1, 1, 1],
                 [1, 1, 1]]
}


def write(text: str, obj='b', start_x=1500, start_y=1500, size=1, extras='0', line_nums=False, start_line=0, spacing=8):
    """
    Convert sentence string into circloO objects
    :param text:    Sentence to be converted
    :param obj:     circloO object; default 'b' is solid rectangle
    :param start_x: Initial x value (left)
    :param start_y: Initial y value (top)
    :param size:    Size of each pixel
    :param extras:  If using objects other than default rectangles, add the extra attributes here
    :param line_nums:   Choose whether to enumerate lines in level file
    :param start_line:  Starting value of line enumeration
    :param spacing: Space between each letter
    :return:    String of circloO objects (w/o header)
    """
    objs = []
    cur_x = start_x

    for char in text:

        if char.upper() in characters.keys():
            objs.append(
                pb.build(
                    characters[char.upper()],
                    obj=obj,
                    start_x=cur_x,
                    start_y=start_y,
                    size=size,
                    extras=extras,
                    line_nums=line_nums,
                    start_line=start_line))
        else:
            # Character not found.
            objs.append(
                pb.build(characters['missing'],
                         obj=obj,
                         start_x=cur_x,
                         start_y=start_y,
                         size=size,
                         extras=extras,
                         line_nums=line_nums,
                         start_line=start_line))
        cur_x += size * spacing

    return ''.join(objs)


# EXAMPLE CODE #########################################################################################################

print(write("the quick brown fox jumped over the lazy dog.", start_x=200, start_y=2000))
